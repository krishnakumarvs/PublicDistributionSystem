/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Retailer;

import db.Dbcon;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import shared.SharedServices;

/**
 *
 * @author USER
 */
public class ViewDeliveredItems extends javax.swing.JFrame {

    String selectedOrderId = null, selectedItem_ids = null, selectedItems_quantities;

    /**
     * Creates new form ViewDeliveredItems
     */
    public ViewDeliveredItems() {
        initComponents();
        setLocationRelativeTo(null);
        received_button.setEnabled(false);
        loadAllRetailerBookings();
    }

    private void loadAllRetailerBookings() {
        try {
            ResultSet rs = new Dbcon().select("SELECT orders.id AS order_id, orders.*, users.name AS retailer_name, users.address AS retailer_address FROM retailer_orders AS orders, user_details AS users WHERE orders.retailer_id = users.id AND orders.retailer_id=" + HomePageRetailer.retailerId);

            int count = 0;
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            while (rs.next()) {
                count++;
                String retailer_name = rs.getString("retailer_name");
                String retailer_address = rs.getString("retailer_address");
                String no_of_items = rs.getString("no_of_items");
                String created_at = SharedServices.convertDate(rs.getString("created_at"));
                String items = rs.getString("items");
                String date_of_delivery = SharedServices.convertDate(rs.getString("date_of_delivery"));
                String order_status = SharedServices.getOrderStatusMessage(rs.getString("order_status"));

                String item_ids = rs.getString("item_ids");
                String order_id = rs.getString("order_id");
                String items_quantities = rs.getString("items_quantities");

                model.addRow(new String[]{count + "", retailer_name, retailer_address, no_of_items, created_at, items, date_of_delivery, order_status, item_ids, order_id, items_quantities});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        received_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Delivery details....");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl No", "Retailer", "Address", "No of items", "Booked date", "Items", "Delivery date", "Order Status", "itemIds", "order id", "quantities"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(8).setMinWidth(0);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(9).setMinWidth(0);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(9).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(10).setMinWidth(0);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        received_button.setText("Confirm Received ");
        received_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                received_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(received_button)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(received_button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HomePageRetailer homePageRetailer = new HomePageRetailer();
        homePageRetailer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int row = jTable1.getSelectedRow();
        selectedOrderId = jTable1.getModel().getValueAt(row, 9).toString();
        selectedItem_ids = jTable1.getModel().getValueAt(row, 8).toString();

        selectedItems_quantities = jTable1.getModel().getValueAt(row, 10).toString();

        String orderStatus = jTable1.getModel().getValueAt(row, 7).toString();
        if (orderStatus.trim().equals("Granted")) {
            received_button.setEnabled(true);
        } else {
            received_button.setEnabled(false);
        }

        System.out.println("orderStatus " + orderStatus);
        System.out.println("selectedOrderId " + selectedOrderId);
        System.out.println("selectedItem_ids " + selectedItem_ids);
        System.out.println("selectedItems_quantities " + selectedItems_quantities);

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void received_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_received_buttonActionPerformed

        // selectedItem_ids , selectedOrderId
        Dbcon d = new Dbcon();
        Dbcon d2 = new Dbcon();
        try {
            int update = d.update("update retailer_orders set order_status = 2 where id = " + selectedOrderId);
            if (update > 0) {
                String[] selectedItemsIdArray = selectedItem_ids.split(",");
                String[] selectedItems_quantitiesArray = selectedItems_quantities.split(",");
                for (int i = 0; i < selectedItemsIdArray.length; i++) {
                    String itemId = selectedItemsIdArray[i];
                    String quantity = selectedItems_quantitiesArray[i];
                    ResultSet rs = d2.select("select * from retailer_items where item_id=" + itemId + " and retailer_id=" + HomePageRetailer.retailerId);
                    if (rs.next()) {
                        // item already there in the retailer items
                        // so update the count
                        String retailerItemId = rs.getString("id");
                        String retailerItemQunatity = rs.getString("quantity");
                        d2.update("update retailer_items set quantity = quantity + " + quantity + " where id = " + retailerItemId);

                    } else {
                        // item not there in the retailer items
                        // so add ne entry
                        d2.insert("insert into retailer_items (item_id, quantity, retailer_id) values ("
                                + " " + itemId + " , "
                                + " " + quantity + " , "
                                + " " + HomePageRetailer.retailerId + "  "
                                + ""
                                + ")");
                    }
                    //

                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error. Please try again later");
            }
            SharedServices.clearRows(jTable1);
            loadAllRetailerBookings();
        } catch (Exception e) {
            e.printStackTrace();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_received_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveredItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveredItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveredItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveredItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewDeliveredItems().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton received_button;
    // End of variables declaration//GEN-END:variables
}
